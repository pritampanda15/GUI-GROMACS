import React, { useState } from 'react';
import './App.css';

function App() {
  const [projects, setProjects] = useState([
    { id: '1', name: 'Test Project', status: 'created' },
    { id: '2', name: 'MD Simulation', status: 'running' }
  ]);

  const createProject = () => {
    const newProject = {
      id: Date.now().toString(),
      name: `Project ${projects.length + 1}`,
      status: 'created'
    };
    setProjects([...projects, newProject]);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <header className="bg-white shadow">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center py-6">
            <div className="flex items-center">
              <div className="flex-shrink-0">
                <h1 className="text-2xl font-bold text-gray-900">
                  ðŸ§¬ GROMACS GUI Platform
                </h1>
              </div>
            </div>
            <div className="flex items-center space-x-4">
              <div className="flex items-center space-x-2">
                <div className="w-2 h-2 bg-green-500 rounded-full"></div>
                <span className="text-sm text-gray-600">Connected</span>
              </div>
            </div>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <main className="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
        <div className="px-4 py-6 sm:px-0">
          <div className="border-4 border-dashed border-gray-200 rounded-lg p-8">
            
            {/* Welcome Section */}
            <div className="text-center mb-8">
              <h2 className="text-3xl font-extrabold text-gray-900 mb-4">
                Welcome to GROMACS GUI Platform
              </h2>
              <p className="text-lg text-gray-600 mb-6">
                A modern web interface for molecular dynamics simulations
              </p>
              
              {/* Status Cards */}
              <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <div className="bg-white p-6 rounded-lg shadow">
                  <div className="text-2xl font-bold text-blue-600">{projects.length}</div>
                  <div className="text-gray-600">Total Projects</div>
                </div>
                <div className="bg-white p-6 rounded-lg shadow">
                  <div className="text-2xl font-bold text-green-600">
                    {projects.filter(p => p.status === 'running').length}
                  </div>
                  <div className="text-gray-600">Running</div>
                </div>
                <div className="bg-white p-6 rounded-lg shadow">
                  <div className="text-2xl font-bold text-purple-600">
                    {projects.filter(p => p.status === 'created').length}
                  </div>
                  <div className="text-gray-600">Ready</div>
                </div>
              </div>

              {/* Action Button */}
              <button
                onClick={createProject}
                className="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded-lg transition-colors duration-200"
              >
                + Create New Project
              </button>
            </div>

            {/* Projects List */}
            <div className="mt-8">
              <h3 className="text-xl font-semibold text-gray-900 mb-4">Projects</h3>
              <div className="space-y-3">
                {projects.map((project) => (
                  <div key={project.id} className="bg-white p-4 rounded-lg shadow flex justify-between items-center">
                    <div>
                      <h4 className="font-medium text-gray-900">{project.name}</h4>
                      <p className="text-sm text-gray-600">ID: {project.id}</p>
                    </div>
                    <span className={`px-2 py-1 rounded-full text-xs font-medium ${
                      project.status === 'running' 
                        ? 'bg-green-100 text-green-800' 
                        : 'bg-gray-100 text-gray-800'
                    }`}>
                      {project.status}
                    </span>
                  </div>
                ))}
              </div>
            </div>

            {/* API Test Section */}
            <div className="mt-8 p-4 bg-blue-50 rounded-lg">
              <h3 className="text-lg font-semibold text-blue-900 mb-2">API Connection Test</h3>
              <p className="text-blue-700 text-sm mb-3">
                Backend API should be running at: 
                <a href="http://localhost:8000" target="_blank" rel="noopener noreferrer" className="underline ml-1">
                  http://localhost:8000
                </a>
              </p>
              <p className="text-blue-700 text-sm">
                API Documentation: 
                <a href="http://localhost:8000/docs" target="_blank" rel="noopener noreferrer" className="underline ml-1">
                  http://localhost:8000/docs
                </a>
              </p>
            </div>

            {/* Next Steps */}
            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <h3 className="text-lg font-semibold text-gray-900 mb-2">Next Steps</h3>
              <ul className="text-sm text-gray-600 space-y-1">
                <li>â€¢ Upload protein structure files (.pdb, .gro)</li>
                <li>â€¢ Configure molecular dynamics parameters</li>
                <li>â€¢ Run simulations with GROMACS</li>
                <li>â€¢ Analyze results with interactive plots</li>
              </ul>
            </div>

          </div>
        </div>
      </main>

      {/* Footer */}
      <footer className="bg-white border-t border-gray-200 mt-12">
        <div className="max-w-7xl mx-auto py-4 px-4 sm:px-6 lg:px-8">
          <p className="text-center text-sm text-gray-500">
            GROMACS GUI Platform - Molecular Dynamics Made Easy
          </p>
        </div>
      </footer>
    </div>
  );
}

export default App;
